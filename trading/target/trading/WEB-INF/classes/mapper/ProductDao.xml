<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.trading.dao.ProductDao">
	<insert id="insertProduct" useGeneratedKeys="true"
		keyColumn="product_id" keyProperty="productId">
		INSERT INTO product(product_title, product_abstract, product_detail,
		product_price, product_status, product_imgAddr, product_imgType, product_user_id)
		VALUES(#{productTitle}, #{productAbstract}, #{productDetail}, #{productPrice}, #{productStatus},
		#{productImgAddr}, #{productImgType}, #{productUser.userId})
	</insert>
	<update id="updateProduct" parameterType="com.netease.trading.entity.Product">
		UPDATE product
		<set>
			<if test="productTitle != null">product_title = #{productTitle},</if>
			<if test="productAbstract != null">product_abstract = #{productAbstract},</if>
			<if test="productDetail != null">product_detail = #{productDetail},</if>
			<if test="productPrice != null">product_price = #{productPrice},</if>
			<if test="productStatus != null">product_status = #{productStatus},</if>
			<if test="productImgAddr != null">product_imgAddr = #{productImgAddr},</if>
			<if test="productImgType != null">product_imgType = #{productImgType},</if>
			<if test="productUser != null">product_user_id = #{productUser.userId}</if>
		</set>
		WHERE product_id = #{productId}
	</update>
	<select id="queryProduct" resultType="com.netease.trading.entity.Product">
		SELECT product_id, product_title, product_abstract, product_detail,
		product_price, product_status, product_imgAddr, product_imgType, product_user_id
		FROM product
	</select>
	<select id="findById" resultType="com.netease.trading.entity.Product">
		SELECT product_id, product_title, product_abstract, product_detail,
		product_price, product_status, product_imgAddr, product_imgType, product_user_id
		FROM product
		WHERE product_id = #{pid}
	</select>
	<select id="findUserProductById" resultType="com.netease.trading.dto.UserProduct">
		SELECT p.*,
		p.`product_id` IN (SELECT DISTINCT(`order_product`) FROM `ordertable` WHERE `order_user_id` = 2) AS hasBought
		FROM product p
		WHERE p.product_id = #{pid}
	</select>
	<select id="findBoughtById" resultType="com.netease.trading.entity.Product">
		SELECT p.product_id, p.product_title, p.product_abstract, p.product_detail,
		o.order_price AS product_price
		FROM product p, `ordertable` o
		WHERE p.product_id = o.order_product AND p.product_id = #{pid}
	</select>
	<select id="queryUserProduct" resultType="com.netease.trading.dto.UserProduct" >
		SELECT p.*,
		p.`product_id` IN (SELECT DISTINCT(`order_product`) FROM `ordertable` WHERE `order_user_id` = #{uid}) AS hasBought
		FROM product p
	</select>
	<select id="queryUnBought" resultType="Product">
		SELECT p.*
		FROM product p
		WHERE p.`product_id` NOT IN (SELECT DISTINCT(`order_product`) FROM `ordertable` WHERE `order_user_id` = #{uid})
	</select>
	<delete id="deleteProduct">
		DELETE FROM product
		WHERE product_id = #{pid}
	</delete>
</mapper>